# Learn about building .NET container images:
# https://github.com/dotnet/dotnet-docker/blob/main/samples/README.md
FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG TARGETARCH
WORKDIR /source

# copy csproj and restore as distinct layers
COPY aspnetapp/*.csproj .
RUN dotnet restore -a $TARGETARCH
ARG CACHEBUST=1
# copy and publish app and libraries
COPY aspnetapp/. .

#RUN tar -xzf ./newrelic-dotnet-agent_amd64.tar.gz -C .
#RUN ls -a ./newrelic-dotnet-agent

RUN dotnet publish -a $TARGETARCH --no-restore -o /app


# final stage/image
FROM mcr.microsoft.com/dotnet/aspnet:8.0

ADD aspnetapp/newrelic-dotnet-agent_amd64.tar.gz /app
#RUN pwd
#RUN ls
#COPY newrelic-dotnet-agent_amd64.tar.gz /app
#RUN tar -xzf newrelic-dotnet-agent_amd64.tar.gz -C .
#RUN ls -a ./newrelic-dotnet-agent

#RUN apt-get update && apt-get install -y wget ca-certificates gnupg \
#&& echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' | tee /etc/apt/sources.list.d/newrelic.list \
#&& wget https://download.newrelic.com/548C16BF.gpg \
#&& apt-key add 548C16BF.gpg \
#&& apt-get update \
#&& apt-get install -y newrelic-dotnet-agent

EXPOSE 8080

# Enable the agent
ENV CORECLR_ENABLE_PROFILING=1 \
CORECLR_PROFILER={36032161-FFC0-4B61-B559-F6C5D41BAE5A} \
#CORECLR_NEWRELIC_HOME=/usr/local/newrelic-dotnet-agent \
#CORECLR_PROFILER_PATH=/usr/local/newrelic-dotnet-agent/libNewRelicProfiler.so \
CORECLR_NEWRELIC_HOME=/app/newrelic-dotnet-agent \
CORECLR_PROFILER_PATH=/app/newrelic-dotnet-agent/libNewRelicProfiler.so \
NEW_RELIC_LICENSE_KEY=eu01xx2fca99a6cabde4af2e29a8919bFFFFNRAL \
NEW_RELIC_APP_NAME=DOTNET-GZ


WORKDIR /app
COPY --from=build /app .
USER $APP_UID
ENTRYPOINT ["./aspnetapp"]
